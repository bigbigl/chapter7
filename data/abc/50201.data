{'TMP': 'C:\\Users\\ADMINI~1\\AppData\\Local\\Temp', 'PYTHONIOENCODING': 'UTF-8', 'COMPUTERNAME': 'Z7CCVA4JCJ6XOLT', 'USERDOMAIN': 'Z7CCVA4JCJ6XOLT', 'PSMODULEPATH': 'C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 60 Stepping 3, GenuineIntel', 'VBOX_MSI_INSTALL_PATH': 'F:\\virualbox\\', 'PROGRAMFILES': 'C:\\Program Files', 'PROCESSOR_REVISION': '3c03', 'SYSTEMROOT': 'C:\\Windows', 'PATH': 'C:\\Python27\\;C:\\Python37-32;C:\\Python27\\Scripts;C:\\Python37-32\\Scripts;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Microsoft VS Code\\bin;C:\\Program Files\\PuTTY\\;G:\\jdk\\bin;G:\\jdk\\jre\\bin;D:\\Nmap;D:\\nmap1\\Nmap;F:\\Nmap;C:\\Python27\\lib\\site-packages\\numpy\\.libs', 'PYTHONUNBUFFERED': '1', 'CLASSPATH': '.;G:\\jdk\\lib\\dt.jar;G:\\jdk\\lib\\tools.jar; ', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'WINDOWS_TRACING_FLAGS': '3', 'TEMP': 'C:\\Users\\ADMINI~1\\AppData\\Local\\Temp', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOCALAPPDATA': 'C:\\Users\\Administrator\\AppData\\Local', 'HOMEPATH': '\\Users\\Administrator', 'USERDOMAIN_ROAMINGPROFILE': 'Z7CCVA4JCJ6XOLT', 'PYCHARM_MATPLOTLIB_PORT': '1179', 'JAVA_HOME': 'G:\\jdk', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'Administrator', 'LOGONSERVER': '\\\\Z7CCVA4JCJ6XOLT', 'ULTRAMON_LANGDIR': 'C:\\Program Files\\UltraMon\\Resources\\en', 'SESSIONNAME': 'Console', 'PROGRAMDATA': 'C:\\ProgramData', 'PYTHONPATH': 'F:\\PyCharm 2018.1.4\\pychrm\\PyCharm 2018.1.4\\helpers\\pycharm_matplotlib_backend;C:\\Users\\Administrator\\Desktop\\test.py', 'ONEDRIVE': 'C:\\Users\\Administrator\\OneDrive', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PYCHARM_HOSTED': '1', 'FP_NO_HOST_CHECK': 'NO', 'WINDIR': 'C:\\Windows', 'WINDOWS_TRACING_LOGFILE': 'C:\\BVTBin\\Tests\\installpackage\\csilogfile.log', 'HOMEDRIVE': 'C:', 'SYSTEMDRIVE': 'C:', 'COMSPEC': 'C:\\Windows\\system32\\cmd.exe', 'NUMBER_OF_PROCESSORS': '4', 'APPDATA': 'C:\\Users\\Administrator\\AppData\\Roaming', 'PROCESSOR_LEVEL': '6', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'OS': 'Windows_NT', 'PUBLIC': 'C:\\Users\\Public', 'USERPROFILE': 'C:\\Users\\Administrator'}